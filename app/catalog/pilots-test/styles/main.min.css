@font-face {
  font-family: 'GilroyMedium';
  src: url("../assets/fonts/Gilroy/GilroyMedium.woff2") format('woff2'), url("../assets/fonts/Gilroy/GilroyMedium.woff") format('woff'), url("../assets/fonts/Gilroy/GilroyMedium.ttf") format('truetype');
  font-style: normal;
  font-weight: 500;
}

@font-face {
  font-family: 'GilroySemiBold';
  src: url("../assets/fonts/Gilroy/GilroySemiBold.woff2") format('woff2'), url("../assets/fonts/Gilroy/GilroySemiBold.woff") format('woff'), url("../assets/fonts/Gilroy/GilroySemiBold.ttf") format('truetype');
  font-style: normal;
  font-weight: 600;
}

@font-face {
  font-family: 'OsnovaProNormal';
  src: url("../assets/fonts/OsnovaPro/OsnovaPro.woff2") format('woff2'), url("../assets/fonts/OsnovaPro/OsnovaPro.woff") format('woff'), url("../assets/fonts/OsnovaPro/OsnovaPro.ttf") format('truetype');
  font-style: normal;
  font-weight: 400;
}

@font-face {
  font-family: 'OsnovaProBold';
  src: url("../assets/fonts/OsnovaPro/OsnovaProBold.woff2") format('woff2'), url("../assets/fonts/OsnovaPro/OsnovaProBold.woff") format('woff'), url("../assets/fonts/OsnovaPro/OsnovaProBold.ttf") format('truetype');
  font-style: normal;
  font-weight: 700;
}

/* normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */

html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

article,
aside,
footer,
header,
nav,
section {
  display: block;
}

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

figcaption,
figure,
main {
  /* 1 */
  display: block;
}

figure {
  margin: 1em 40px;
}

hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */
}

abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */
}

b,
strong {
  font-weight: inherit;
}

b,
strong {
  font-weight: bolder;
}

code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

dfn {
  font-style: italic;
}

mark {
  background-color: #ff0;
  color: #000;
}

small {
  font-size: 80%;
}

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

audio,
video {
  display: inline-block;
}

audio:not([controls]) {
  display: none;
  height: 0;
}

img {
  border-style: none;
}

svg:not(:root) {
  overflow: hidden;
}

button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

button,
input {
  /* 1 */
  overflow: visible;
}

button,
select {
  /* 1 */
  text-transform: none;
}

button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
}

button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

fieldset {
  padding: 0.35em 0.75em 0.625em;
}

legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

textarea {
  overflow: auto;
}

[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

details,
menu {
  display: block;
}

summary {
  display: list-item;
}

canvas {
  display: inline-block;
}

template {
  display: none;
}

[hidden] {
  display: none;
}

* {
  margin: 0;
  padding: 0;
  font: inherit;
}

*,
*:before,
*:after {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

*,
*:before,
*:after {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  outline: none;
  margin: 0;
  padding: 0;
}

html,
body {
  position: relative;
  width: 100%;
  height: 100%;
}

html {
  font-size: 10px;
}

body {
  font-family: 'GilroyMedium', Arial, 'Helvetica CY', sans-serif;
  font-size: 1.8rem;
  line-height: 30px;
  color: #b7c0ff;
}

img {
  max-width: 100%;
  height: auto;
}

.visualli-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  border: 0;
  clip: rect(0 0 0 0);
  overflow: hidden;
}

.bg-behind-brain {
  position: fixed;
  top: 50%;
  left: 50%;
  z-index: 400;
  display: block;
  width: 47%;
  background: #131a57;
  border-radius: 50%;
  -webkit-transform: translate(-50%, -50%) scale(0);
          transform: translate(-50%, -50%) scale(0);
}

.bg-behind-brain_big {
  width: 69%;
  background: rgba(19,26,87,0.43);
}

.bg-behind-brain__inner {
  display: block;
  padding-top: 100%;
}

.bg-circle-from-left {
  position: fixed;
  top: 50%;
  left: 0;
  display: block;
  width: 100vh;
  height: 100vh;
  border-radius: 50%;
  -webkit-transform: translate(-50%, -50%) scale(0);
          transform: translate(-50%, -50%) scale(0);
}

.bg-circle-from-left_big {
  z-index: 800;
  width: 180vh;
  height: 180vh;
  background: rgba(40,53,147,0.3);
}

.bg-circle-from-left_medium {
  z-index: 830;
  width: 140vh;
  height: 140vh;
  background: rgba(40,53,147,0.5);
}

.bg-circle-from-left_small {
  z-index: 860;
  background-color: transparent;
  background-color: #ff0;
}

.bg-curtain {
  position: fixed;
  top: 0;
  left: 0;
  z-index: 300;
  width: 100%;
  height: 100%;
  background: #283593;
}

.body {
  position: relative;
  background: #283593;
}

.brain {
  position: fixed;
  top: 50%;
  left: 50%;
  z-index: 500;
  display: block;
  width: 47%;
  -webkit-transform: translate(-50%, -50%) scale(0);
          transform: translate(-50%, -50%) scale(0);
}

.brain__inner {
  position: relative;
  display: block;
  padding-top: 100%;
}

.brain__pic {
  position: absolute;
  top: 0;
  left: 0;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  height: 100%;
  overflow: hidden;
}

.brain__himself {
  width: 50%;
  height: auto;
  margin: auto;
  fill: #283593;
}

.brain__gear {
  fill: #b7c0ff;
}

.button {
  display: inline-block;
  width: 100%;
  padding: 9% 10%;
  font-family: 'OsnovaProNormal', Arial, 'Helvetica CY', sans-serif;
  font-size: 1.8rem;
  line-height: 1.25;
  text-decoration: none;
  text-transform: uppercase;
  letter-spacing: 5px;
  color: #fff;
  border: 1px solid #fff;
  border-radius: 0;
  background: transparent;
  cursor: pointer;
}

.button:hover {
  background: #fff;
  color: #000;
  -webkit-transition: all 0.5s;
  transition: all 0.5s;
}

.button:active {
  background: transparent;
}

.container {
  max-width: 1920px;
  margin: 0 auto;
  padding: 0 5.3% 10% 6.3%;
}

.content-cell-left {
  padding: 6.3% 0 0 4%;
}

.content-cell-left__button {
  display: inline-block;
  min-width: 50%;
}

.content-cell-right {
  padding: 9.2% 6% 30% 3.5%;
  margin-left: auto;
}

.content-cell-right__button {
  display: inline-block;
  min-width: 50%;
}

.content__cell {
  margin-bottom: 4%;
}

.header {
  position: relative;
  padding-right: 50px;
}

.header__logo {
  margin-right: 60px;
}

.header__menu-switcher {
  position: absolute;
  top: 0;
  right: 0;
  z-index: 200;
  width: 40px;
  height: 40px;
}

@-webkit-keyframes showElem {
  0% {
    -webkit-transform: translateY(-100%);
            transform: translateY(-100%);
    opacity: 0;
  }

  100% {
    -webkit-transform: translateY(0);
            transform: translateY(0);
    opacity: 1;
  }
}

@keyframes showElem {
  0% {
    -webkit-transform: translateY(-100%);
            transform: translateY(-100%);
    opacity: 0;
  }

  100% {
    -webkit-transform: translateY(0);
            transform: translateY(0);
    opacity: 1;
  }
}

@-webkit-keyframes hideElem {
  0% {
    -webkit-transform: translateY(0);
            transform: translateY(0);
  }

  100% {
    -webkit-transform: translateY(-100%);
            transform: translateY(-100%);
  }
}

@keyframes hideElem {
  0% {
    -webkit-transform: translateY(0);
            transform: translateY(0);
  }

  100% {
    -webkit-transform: translateY(-100%);
            transform: translateY(-100%);
  }
}

.hero {
  position: relative;
  z-index: 1000;
  display: block;
  width: 100%;
  height: 100%;
  padding-top: 4%;
}

.logo {
  margin-bottom: 2%;
  font-family: 'OsnovaProBold', Arial, 'Helvetica CY', sans-serif;
  font-size: 3rem;
  line-height: 1.25;
  color: #b7c0ff;
  text-decoration: none;
  text-transform: uppercase;
  letter-spacing: 15px;
}

.main-menu__list {
  font-size: 0;
  list-style-type: none;
}

.main-menu__item {
  display: block;
  margin-right: 0;
  margin-bottom: 20px;
}

.main-menu__item:last-child {
  margin-right: 0;
}

.main-menu__link {
  position: relative;
  display: block;
  font-family: 'OsnovaProBold', Arial, 'Helvetica CY', sans-serif;
  font-size: 1.8rem;
  line-height: 1.25;
  text-transform: uppercase;
  text-decoration: none;
  letter-spacing: 5px;
  color: #b7c0ff;
  overflow: hidden;
}

.main-menu__link:hover {
  color: #fff;
}

.main-menu__link:hover::before {
  -webkit-transform: translateX(0);
          transform: translateX(0);
}

.main-menu__link:active::before {
  opacity: 0;
}

.menu-switcher {
  position: relative;
  margin: 0;
  padding: 1em 0;
  padding-left: 1.5em;
  z-index: 1;
  font-family: $font-family;
  font-size: 1.8rem;
  font-weight: bold;
  line-height: 1;
  text-transform: uppercase;
  color: #fff;
  border: 0;
  background: none;
  cursor: pointer;
}

.menu-switcher::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  display: block;
  width: 1em;
  height: 0.18em;
  background: #fff;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  -webkit-box-shadow: 0 0.4em #fff, 0 -0.4em #fff;
          box-shadow: 0 0.4em #fff, 0 -0.4em #fff;
}

.menu-switcher_isOpend::before,
.menu-switcher_isOpend::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  display: block;
  width: 1em;
  height: 0.2em;
  background: #fff;
  -webkit-box-shadow: none;
          box-shadow: none;
}

.menu-switcher_isOpend::before {
  -webkit-transform: translateX(-50%) rotate(45deg);
          transform: translateX(-50%) rotate(45deg);
  -webkit-transition: -webkit-transform 0.5s;
  transition: -webkit-transform 0.5s;
  transition: transform 0.5s;
  transition: transform 0.5s, -webkit-transform 0.5s;
}

.menu-switcher_isOpend::after {
  -webkit-transform: translateX(-50%) rotate(-45deg);
          transform: translateX(-50%) rotate(-45deg);
  -webkit-transition: -webkit-transform 0.5s;
  transition: -webkit-transform 0.5s;
  transition: transform 0.5s;
  transition: transform 0.5s, -webkit-transform 0.5s;
}

.swiper-container {
  position: relative;
  /* Fix of Webkit flickering */
  z-index: 1;
  width: 100%;
  height: auto;
  margin-bottom: 9%;
  overflow: hidden;
}

.swiper-wrapper {
  position: relative;
  z-index: 1;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  height: 100%;
  -webkit-transition-property: -webkit-transform;
  transition-property: -webkit-transform;
  transition-property: transform;
  transition-property: transform, -webkit-transform;
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
}

.swiper-slide {
  position: relative;
  -ms-flex-negative: 0;
      flex-shrink: 0;
  width: 100%;
  height: 100%;
  -webkit-transition-property: -webkit-transform;
  transition-property: -webkit-transform;
  transition-property: transform;
  transition-property: transform, -webkit-transform;
}

.swiper-pagination {
  display: block;
}

.swiper-pagination-bullets {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

.swiper-pagination-bullet {
  display: block;
  width: 13px;
  height: 13px;
  margin-right: 30px;
  border: 1px solid #fff;
  border-radius: 50%;
  cursor: pointer;
}

.swiper-pagination-bullet:last-child {
  margin-right: 0;
}

.swiper-pagination-bullet-active {
  border: none;
  background: #b7c0ff;
  -webkit-box-shadow: 0 0 0 5px #b7c0ff;
          box-shadow: 0 0 0 5px #b7c0ff;
  cursor: default;
  -webkit-transition: -webkit-box-shadow 0.5s;
  transition: -webkit-box-shadow 0.5s;
  transition: box-shadow 0.5s;
  transition: box-shadow 0.5s, -webkit-box-shadow 0.5s;
}

.swiper-container-autoheight,
.swiper-container-autoheight .swiper-slide {
  height: auto;
}

.swiper-container-autoheight .swiper-wrapper {
  -webkit-box-align: start;
      -ms-flex-align: start;
          align-items: flex-start;
}

.text {
  margin-bottom: 9%;
  font-size: 1.6rem;
  line-height: 1.8;
  color: #b7c0ff;
}

.title-main {
  margin-bottom: 10%;
  font-size: 5.8rem;
  line-height: 1;
  color: #fff;
  overflow: hidden;
}

.title {
  margin: 0;
  margin-bottom: 3.5%;
  font-size: 3rem;
  line-height: 30px;
  color: #b7c0ff;
}

.video {
  position: fixed;
  top: 0;
  right: 0;
  left: 0;
  bottom: 0;
  z-index: 100;
  display: block;
  overflow: hidden;
}

.video_inCercle {
  width: 100vh;
  height: 100vh;
  border-radius: 50%;
  -webkit-transform: translateX(-50%) scale(0);
          transform: translateX(-50%) scale(0);
  z-index: 900;
}

.video__inner {
  position: absolute;
  top: 0;
  right: 0;
  width: 100%;
  height: 100%;
  background: rgba(19,26,87,0.4);
}

.video__clip {
  position: relative;
  z-index: -1;
}

@media only screen and (min-width: 544px) {
  .text {
    font-size: 1.8rem;
    line-height: 30px;
  }

  .title-main {
    font-size: 6.96rem;
    line-height: 1;
  }
}

@media only screen and (min-width: 768px) {
  .content-cell-left__button {
    min-width: 43%;
  }

  .header {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: justify;
        -ms-flex-pack: justify;
            justify-content: space-between;
    -webkit-box-align: baseline;
        -ms-flex-align: baseline;
            align-items: baseline;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
    padding-right: 0;
  }

  .header__menu-switcher {
    display: none;
  }

  .main-menu__item {
    display: inline-block;
    vertical-align: top;
    margin-right: 48px;
    margin-bottom: 0;
  }

  .main-menu__link::before {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 2px;
    background: #fff;
    -webkit-transform: translateX(-101%);
            transform: translateX(-101%);
    -webkit-transition: -webkit-transform 0.5s;
    transition: -webkit-transform 0.5s;
    transition: transform 0.5s;
    transition: transform 0.5s, -webkit-transform 0.5s;
  }

  .title-main {
    font-size: 8.7225rem;
  }

  .title {
    font-size: 5.8rem;
    line-height: 85.48px;
  }
}

@media only screen and (min-width: 992px) {
  .content-cell-right {
    padding-bottom: 0;
  }

  .content {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: justify;
        -ms-flex-pack: justify;
            justify-content: space-between;
  }

  .content__cell {
    width: 50%;
    margin-bottom: 0;
  }
}

@media only screen and (min-width: 1200px) {
  .title-main {
    font-size: 10.467rem;
    line-height: 114px;
  }
}

@media only screen and (max-width: 768px) {
  .bg-behind-brain {
    display: none;
  }

  .bg-circle-from-left {
    display: none;
  }

  .bg-curtain {
    display: none;
  }

  .body {
    background: #131a57;
  }

  .brain {
    display: none;
  }

  .header__menu {
    position: absolute;
    top: 0;
    left: 0;
    z-index: 100;
    display: none;
    width: 100%;
    min-height: 100vh;
    padding: 50px;
    text-align: center;
    background: #283593;
    border-bottom: 5px solid #fff;
  }

  .header__menu_show-start {
    visibility: hidden;
  }

  .header__menu_isShowed {
    -webkit-animation-name: showElem;
            animation-name: showElem;
    -webkit-animation-duration: 0.5s;
            animation-duration: 0.5s;
    -webkit-animation-fill-mode: forwards;
            animation-fill-mode: forwards;
  }

  .header__menu_isHidden {
    -webkit-animation-name: hideElem;
            animation-name: hideElem;
    -webkit-animation-duration: 0.5s;
            animation-duration: 0.5s;
    -webkit-animation-fill-mode: forwards;
            animation-fill-mode: forwards;
  }

  .no-js .header {
    padding-right: 0;
  }

  .no-js .header__menu {
    position: static;
    display: block;
    min-height: auto;
    padding-bottom: 10px;
    border-bottom: none;
  }

  .no-js .header__menu-switcher {
    display: none;
  }

  .video {
    display: none;
  }
}

@media only screen and (max-width: 768px) and (max-width: 768px) {
  .header__menu {
    background: #131a57;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
